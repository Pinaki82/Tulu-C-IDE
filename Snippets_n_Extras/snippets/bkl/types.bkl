<?xml version="1.0" ?>
<!-- ================= Includes, Libraries, Paths... ======================= -->
<include>../include/foo</include>
<headers>utils.h additionalheader.h</headers>
<win32-res>resource.rc</win32-res>
<sources>utils.c utils2.c</sources>
<sys-lib>png</sys-lib>
<sys-lib>z</sys-lib>
<lib-path>/usr/lib/mysql</lib-path>
<!-- note that hardcoding library paths like this is a bad
       idea, it's done here only for the sake of simplicity;
       in real bakefile, an <option> would be used -->
<library>mylib</library>
<define>SOMEMACRO</define>

<!-- ================= optimization (not essential, can be set from CFLAGS) ======================= -->
<set var="OPTIMIZE_FLAG">
  <if cond="BUILD=='release'">speed</if>
  <if cond="BUILD=='debug'">off</if>
</set>
<exe id="myapp">
  <optimize>$(OPTIMIZE_FLAG)</optimize>
  <sources>main.c</sources>
  <sys-lib>GL</sys-lib>
</exe>
<!-- ================= Precompiled Headers ======================= -->
<exe id="myapp">
  <sources>foo.cpp bar.cpp</sources>
  <precomp-headers>on</precomp-headers>
  <precomp-headers-gen>foo.cpp</precomp-headers-gen>
  <precomp-headers-header>mypch.h</precomp-headers-header>
</exe>

<exe id="setup"></exe>
<exe id="app">
<depends>setup</depends>
</exe>
<exe id="app"></exe>
<exe id="setup">
<dependency-of>app</dependency-of>
</exe>

<!--
===========================================
Standard types of different Targets
===========================================
-->
<!--
===========================================
Plain EXE
===========================================
-->
<exe id="foo">
  <app-type>gui</app-type>
  <sources>foo.c bar.c</sources>
</exe>
<!--
===========================================
lib file creation
===========================================
-->
<lib id="foo">
  <libname>foo$(COMPILER)_$(DBGFLAG)</libname>
  <sources>foo.c bar.c</sources>
</lib>
<!--
===========================================
dll file creation
===========================================
-->
<?xml version="1.0" ?>
<makefile>
    <dll id="easy_dll">
        <sources>easy_dll.c</sources>
        <so_version>1.0.3</so_version>
        <libname>easy_dll</libname>
        <dllname>easy_dll</dllname>
        <install-to>$(LIBDIR)</install-to>
    </dll>
   <exe id="useit">
       <sources>useit.c</sources>
       <library>easy_dll</library>
       <install-to>$(BINDIR)</install-to>
       <pic>on</pic>
   </exe>
</makefile>
<!--
===========================================
WIN32 GUI EXE
===========================================
-->
<?xml version="1.0" ?>
<makefile>
   <exe id="hello">
       <set var="CFLAGS">-W- -s</set>
       <app-type>gui</app-type>
       <sources>hello.c</sources>
       <set var="LDFLAGS">-L/SUBSYSTEM:WINDOWS</set>
   </exe>
</makefile>
<!--
======================================================================================
WIN32 GUI EXE 2ND EXAMPLE (using CFLAGS/LDFLAGS without touching into the makefile)
======================================================================================
-->
<?xml version="1.0" ?>
<makefile>
   <exe id="hello">
       <cflags>-W- -s</cflags>
       <ldflags> -L/SUBSYSTEM:WINDOWS kernel32.lib user32.lib gdi32.lib comctl32.lib ole32.lib</ldflags>
       <app-type>gui</app-type>
       <sources>hello.c</sources>
   </exe>
</makefile>
<!--
===========================================
WIN32 CONSOLE EXE
===========================================
-->
<?xml version="1.0" ?>
<makefile>
   <exe id="hello_world">
       <set var="CFLAGS">-W- -s</set>
       <app-type>console</app-type>
       <sources>hello_world.c</sources>
   </exe>
</makefile>
===========================================
COMPLETE DLL AND ITS USER PROJECT
===========================================
<?xml version="1.0" ?>
<makefile>
    <dll id="easy_dll">
        <so_version>1.0.3</so_version>
        <include> "C:\dm\include\" </include>
        <include> "C:\dm\stlport\stlport\" </include>
        <define> BUILD_DLL </define>
        <cflags> -mn -WD -W- -s </cflags>
        <sources>easy_dll.c</sources>
        <libname>easy_dll</libname>
        <dllname>easy_dll</dllname>
        <sys-lib> user32.lib kernel32.lib shell32 </sys-lib>
        <!-- Do not use use LDFLAGS or <ldflags> while creating same makefile for two Targets (dll and exe both),
              use <sys-lib> (i.e. system default libraries) instead. -->
        <install-to>$(LIBDIR)</install-to>
    </dll>
   <exe id="useit">
       <include> "C:\dm\include\" </include>
       <include> "C:\dm\stlport\stlport\" </include>
       <app-type> console </app-type>
       <cflags> -W- -s </cflags>
       <sources>useit.c</sources>
       <library>easy_dll</library>
       <sys-lib> user32.lib kernel32.lib shell32 </sys-lib>
       <!-- Do not use use LDFLAGS or <ldflags> while creating same makefile for two Targets (dll and exe both),
              use <sys-lib> (i.e. system default libraries) instead. -->
       <install-to>$(BINDIR)</install-to>
       <pic>on</pic>
   </exe>
</makefile>
===========================================
A SIMPLE EXE
===========================================
<?xml version="1.0" ?>
<makefile>
   <exe id="hello">
       <include> "C:\dm\include\" </include>
       <include> "C:\dm\stlport\stlport\" </include>
       <app-type> console </app-type>
       <cflags> -WA -W- -s </cflags>
       <sources> hello.c </sources>
       <sys-lib> user32.lib kernel32.lib shell32 </sys-lib>
       <pic>on</pic>
   </exe>
</makefile>
===========================================

===========================================

