; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
;
; ==============================================================================
; ==============================================================================
; https://docs.platformio.org/en/latest/core/userguide/project/cmd_init.html
;
; pio project init --ide vim --board nodemcuv2
; pio project init --ide vim --board d1_mini
; pio project init --ide vim --board uno
; pio project init --ide vim --board pico
; pio project init --ide vim --board teensy31
; pio project init --ide vim --board bluepill_f103c8_128k
; pio project init --ide vim --board uno --board nodemcuv2 --board teensy31
; pio boards
; pio boards>pioBoards.txt
; https://registry.platformio.org/search?t=platform
; pio -h
; pio check --skip-packages
; pio check --skip-packages --verbose
; pio test -vvv
; pio device list
; pio home
; pio upgrade
;
; include - Put project header files here
; lib - Put here project specific (private) libraries
; src - Put project source files here
; platformio.ini - Project Configuration File
;
; Useful commands:
; `pio run` - process/build project from the current directory
; `pio run -t buildfs` - Build LittleFS Filesystem for ESP8266
; `pio run --target upload` or `pio run -t upload` - upload firmware to a target
; `pio run -t uploadfs` - Upload LittleFS Filesystem to the flash memory of ESP8266
; `pio run --target clean` - clean project (remove compiled files)
; `pio run --help` - additional information
; `pio run --target monitor` - Monitor serial port output (Use a desktop
;                     program like "CoolTerm": https://freeware.the-meiers.org/
;                     or use "Serial USB Terminal" on
;                     Android. https://play.google.com/store/apps/details?id=de.kai_morich.serial_usb_terminal&gl=US
;                     ). Alternatively,
; `pio device monitor` - Monitor serial port output
; `pio run --target erase` - Erase Flash & EEPROM Memory
;
; ESPTOOL:
; https://randomnerdtutorials.com/esp8266-nodemcu-erase-flash-memory/
; https://www.flamingo-tech.nl/2021/03/21/installing-and-using-esptools/
;
; python -m esptool
; python -m esptool --port COM4 --chip esp8266 erase_flash
; python -m esptool --port COM4 --chip esp8266 chip_id
; python -m esptool --port COM4 --chip esp8266 flash_id
;
; ==============================================================================
; ==============================================================================


; [env:bluepill_f103c8_128k], [env:pico], [env:nodemcuv2] etc.
; Structure:
;
; [env:board]
; platform =
; board =
; framework =
; board_build.mcu =
; board_build.filesystem =
; upload_protocol =
; platform_packages =
; ... ... ...
; ... ... ...
;


; =============================
; Board specific [env:MNOPQRSTWXYZ]
; =============================
; [env:bluepill_f103c8_128k]
; platform = ststm32
; board = bluepill_f103c8_128k
; framework = arduino


; =============================
; Board specific [env:MNOPQRSTWXYZ]
; =============================
; [env:pico]
; platform = raspberrypi
; board = pico
; framework = arduino
; board_build.mcu = rp2040
; upload_protocol = picotool


; =============================
; Board specific [env:MNOPQRSTWXYZ]
; =============================
; [env:d1_mini]
; platform = espressif8266
; board = d1_mini
; framework = arduino


; =============================
; Board specific [env:MNOPQRSTWXYZ]
; =============================
; [env:uno]
; platform = atmelavr
; board = uno
; framework = arduino


; =============================
; Board specific [env:MNOPQRSTWXYZ]
; =============================
; [env:teensy31]
; platform = teensy
; board = teensy31
; framework = arduino


; =============================
; Board specific [env:MNOPQRSTWXYZ]
; A Working Example:
; =============================
[env:nodemcuv2]
platform = espressif8266
             ; LINKS & NOTES:
             ; ESP8266 NodeMCUv2 (clone/2MB with CH340G USB To TTL/Serial)
board = nodemcuv2
framework = arduino
upload_protocol = esptool
board_build.filesystem = littlefs
; LINKS & NOTES:
; LittleFS File System for NodeMCU ESP8266
; https://randomnerdtutorials.com/esp8266-nodemcu-vs-code-platformio-littlefs/
platform_packages =
    platformio/framework-arduinoespressif8266 @ https://github.com/esp8266/Arduino.git
; LINKS & NOTES:
; https://community.platformio.org/t/esp8266wifi-library-not-found/7475
; https://github.com/tzapu/WiFiManager
; https://github.com/esp8266/Arduino
; https://docs.platformio.org/en/stable/platforms/espressif8266.html#using-arduino-framework-with-staging-version
; https://github.com/platformio/platform-espressif8266/tree/master/examples/arduino-webserver?utm_source=platformio.org&utm_medium=docs

; NOTE: Build Configurations
; build_type = debug
build_type = release
; LINKS & NOTES:
; https://docs.platformio.org/en/latest/projectconf/build_configurations.html

monitor_port = COM4
monitor_speed = 9600
upload_port = COM4

lib_deps =
    https://github.com/SofaPirate/Chrono.git
    https://github.com/tzapu/WiFiManager.git
    arduino-libraries/NTPClient
    ; https://github.com/me-no-dev/ESPAsyncWebServer.git
    ; ESP8266WebServer @ ^1.0
    ; werecatf/PCF8574_ESP@^1.0.10
    ; marcoschwartz/LiquidCrystal_I2C@^1.1.4
    ; bblanchon/ArduinoJson@^6.17.2
    ; paulstoffregen/Time@^1.6.1
    ; links2004/WebSockets@^2.3.6
    ; gmag11/NtpClientLib@^3.0.2-beta
    ; knolleary/PubSubClient@^2.8
    ; paulstoffregen/OneWire@^2.3.6
    ; milesburton/DallasTemperature@^3.9.1
    ; adafruit/Adafruit BME280 Library@^2.2.1
    ; adafruit/Adafruit BusIO@^1.9.8
    ; adafruit/Adafruit GFX Library@^1.10.12
    ; adafruit/Adafruit Unified Sensor@^1.1.4
    ; adafruit/Adafruit ILI9341@^1.5.10
    ; adafruit/DHT sensor library@^1.4.3

lib_ignore =
    ; WiFi101
    ; TinyWireM

build_unflags =
    ; -std=gnu++11

build_flags =
    ; -std=c++17
    -Wall -Wextra  -O2
    -D PIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
    -DDEBUG_ESP_PORT=Serial
    -DDEBUG_ESP_OTA
; LINKS & NOTES:
; https://community.platformio.org/t/esp8266webserver-impl-h-compilation-error/24751/9

extra_scripts =
           PlatformIO_extra_script_Release.py
; LINKS & NOTES:
; https://docs.platformio.org/en/latest/scripting/examples/extra_linker_flags.html

; LINKS & NOTES:
; Example.
; https://github.com/esp8266/Arduino/blob/master/libraries/ESP8266WebServer/examples/AdvancedWebServer/AdvancedWebServer.ino

