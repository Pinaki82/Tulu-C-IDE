# MIT-0 (The MIT No Attribution license):
# https://spdx.org/licenses/MIT-0.html
# https://opensource.org/licenses/MIT-0.
# https://github.com/aws/mit-0
#
#   ______      __            ______     ________  ______
#  /_  __/_  __/ /_  __      / ____/    /  _/ __ \/ ____/
#   / / / / / / / / / /_____/ /  ______ / // / / / __/
#  / / / /_/ / / /_/ /_____/ /__/_____// // /_/ / /___
# /_/  \__,_/_/\__,_/      \____/    /___/_____/_____/

#     __  __     ___         ______    ___ __  _
#    / / / /__  / (_)  __   / ____/___/ (_) /_(_)___  ____
#   / /_/ / _ \/ / / |/_/  / __/ / __  / / __/ / __ \/ __ \
#  / __  /  __/ / />  <   / /___/ /_/ / / /_/ / /_/ / / / /
# /_/ /_/\___/_/_/_/|_|  /_____/\__,_/_/\__/_/\____/_/ /_/

# figlet -f Slant Tulu-C-IDE
# figlet -f Slant Helix Edition

# Ref: https://docs.helix-editor.com/configuration.html
# The char # marks a line as a comment.
# ------------------------------------------------------------------------------
#
theme = "default" # I loved the 'default' toy theme, so I'll leave it as it was.
# theme = "ayu_mirage" # Another eye-candy theme.

[editor]
line-number = "relative"
    # Shows relative (hybrid) line numbers like: 3 2 1 "4" 1 2 3 4 5
mouse = true
    # Mouse actions can be performed.
rulers = [80]
    # Sets a margin at the 80th column
cursorline = true
    # Highlight all lines with a cursor
cursorcolumn = true
    # Highlight all columns with a cursor
color-modes = true
    # Not sure...
auto-pairs = true # defaults to `true`
    # Highlights matching brackets
bufferline = "multiple"
    # Renders a line at the top of the editor displaying open buffers.
auto-completion = true
    # Enable automatic pop up of auto-completion
auto-format = true
    # Enable automatic formatting on save
default-line-ending = "lf"
    # The line ending to use for new documents.
    # Can be native, lf, crlf, ff, cr or nel.
    # native uses the platform's native line ending
    # (crlf on Windows, otherwise lf).

[editor.indent-guides]
render = true
    # Displays indent guide (faded vertical lines following brackets and blocks)
character = "|"
    # Indentation is expressed by a faded | character
skip-levels = 1

[editor.gutters]
layout = ["diff", "diagnostics", "line-numbers", "spacer"]
    # A vector of gutters to display

[editor.gutters.line-numbers]
min-width = 1
    # The minimum number of characters to use

[editor.soft-wrap] # Options for soft wrapping lines that exceed the view width:
enable = true
max-wrap = 25 # increase value to reduce forced mid-word wrapping
    # Maximum free space left at the end of the line.
max-indent-retain = 0
    # Maximum indentation to carry over when soft wrapping a line.
wrap-indicator = "↪"  # set wrap-indicator to "" to hide it
    # Text inserted before soft wrapped lines, highlighted with ui.virtual.wrap

[editor.smart-tab]
enable = true
supersede-menu = false
    # Normally, when a menu is on screen, such as when auto complete is triggered, the tab key is bound to cycling through the items. This means when menus are on screen, one cannot use the tab key to trigger the smart-tab command. If this option is set to true, the smart-tab command always takes precedence, which means one cannot use the tab key to cycle through menu items. One of the other bindings must be used instead, such as arrow keys or C-n/C-p.

[editor.cursor-shape]
insert = "bar"
    # The cursor will look 'somewhat' like a "|" in the Insert Mode
normal = "block"
    #                                      "█" in the Normal Mode
select = "underline"
    #                                      "_" in the Select Mode

[editor.file-picker]
hidden = false
    # Hidden files will be shown by the built-in file picker.

[keys.normal]
                # Some Key-Mappings in the Normal Mode.
                # Change what you don't like.
C-s = ":w" # Maps the Control-s to the typable command :w which is an alias for :write (save file)
    # CTRL+s to save
";" = "command_mode"
    # ; instead of SHIFT+; (i.e., :) to go to Command Mode
[keys.insert]
                #      Key-Mappings in the Normal Mode.
"A-x" = "normal_mode" # Maps Alt-X to enter normal mode
    # Press ALT+x to go to Normal Mode.
j = { k = "normal_mode" } # Maps `jk` to exit insert mode
    # Type 'jk' to leave the Insert Mode and go to the Normal Mode.
k = { j = "normal_mode" } # Maps `kj` to exit insert mode
    # Type 'kj' to leave the Insert Mode and go to the Normal Mode.

[editor.statusline]
left = ["mode", "spinner", "file-name", "read-only-indicator", "total-line-numbers", "selections", "primary-selection-length", "version-control", "register"]
center = ["file-name"]
right = ["diagnostics", "selections", "position", "position-percentage", "file-encoding", "file-line-ending", "file-type",  "workspace-diagnostics"]
separator = "│"
mode.normal = "NORMAL"
mode.insert = "INSERT"
mode.select = "SELECT"

[editor.lsp]
display-messages = true
    # Display LSP progress messages below statusline
display-inlay-hints = true
    # Display inlay hints
#

