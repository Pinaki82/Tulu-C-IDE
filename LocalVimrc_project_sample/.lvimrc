colo mustang_green

" ============================================ Syntastic ==================
    let g:syntastic_cpp_config_file = 'LocalVimConfig/.syntastic_cpp_config'
	" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    let g:syntastic_c_config_file = 'LocalVimConfig/.syntastic_c_config'
    " ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    let g:syntastic_clang_check_config_file = 'LocalVimConfig/.syntastic_clang_check_config'
    " ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    let g:syntastic_clang_tidy_config_file = 'LocalVimConfig/.syntastic_clang_tidy_config'
    " ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    let g:syntastic_cppcheck_config_file = 'LocalVimConfig/.syntastic_cppcheck_config'
    " ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    let g:syntastic_verapp_config_file = 'LocalVimConfig/.syntastic_verapp_config'
    " ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    let g:syntastic_splint_config_file = 'LocalVimConfig/.syntastic_splint_config'
    " ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" =========================================================================

" *** Ue the following line whenever you get into trouble with syntastic ***
" g:syntastic_c_errorformat='%m'
" let g:syntastic_debug = 1
" let g:syntastic_debug = 3
" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
let g:syntastic_c_check_header = 1
let g:syntastic_cpp_check_header = 1

" ============================================

" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

" add current directory's generated tags file to available tags
set tags+=./tags
set tags+=./tags;/
set tags+=./tags;/.
set path+=./;/
" ------------------------------- Common Tags-----------
" https://vi.stackexchange.com/questions/2572/detect-os-in-vimscript
" source '.set_tags_n_set_paths.txt'



" ========================== List all sub-directories in a folder and produce an output to a text file:
" https://stackoverflow.com/questions/35560540/batch-file-to-list-directories-recursively-in-windows-as-in-linux
" dir /a:d /s /b /o:n > list.txt


" ========================== Vim-Clang (J.Mao) Generic Options ==========

let g:clang_format_auto = 0
" Style can be LLVM, Google, Chromium, Mozilla, WebKit
" let g:clang_format_style = 'LLVM'
let g:clang_include_sysheaders = 1
let g:clang_include_sysheaders_from_gcc = 1

" -------------------------------
" https://vi.stackexchange.com/questions/2572/detect-os-in-vimscript
if has("win64") || has("win32") || has("win16") || has("win32unix")
    let g:clang_c_options = '-target'
    let g:clang_c_options = 'x86_64-pc-windows-gnu'
endif

let g:clang_c_options = '-std=gnu11'
let g:clang_c_options = '-Wall -Werror -Wextra'

" -------------------------------
" https://vi.stackexchange.com/questions/2572/detect-os-in-vimscript
if has("win64") || has("win32") || has("win16") || has("win32unix")
    let g:clang_cpp_options = '-target'
    let g:clang_cpp_options = 'x86_64-pc-windows-gnu'
endif

let g:clang_cpp_options = '-std=gnu++11'
let g:clang_cpp_options = '-std=c++ -stdlib=libc++'
let g:clang_cpp_options = '-Wall -Werror -Wextra'
let g:clang_cpp_options = '-W'
let g:clang_verbose_pmenu = 1

let g:clang_c_completeopt = 'longest,menuone,preview'

" ==========================

